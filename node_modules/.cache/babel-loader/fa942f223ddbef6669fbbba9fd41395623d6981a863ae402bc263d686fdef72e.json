{"ast":null,"code":"(function (factory) {\n  var L, proj4;\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['leaflet', 'proj4'], factory);\n  } else if (typeof module === 'object' && typeof module.exports === \"object\") {\n    // Node/CommonJS\n    L = require('leaflet');\n    proj4 = require('proj4');\n    module.exports = factory(L, proj4);\n  } else {\n    // Browser globals\n    if (typeof window.L === 'undefined' || typeof window.proj4 === 'undefined') throw 'Leaflet and proj4 must be loaded first';\n    factory(window.L, window.proj4);\n  }\n})(function (L, proj4) {\n  if (proj4.__esModule && proj4.default) {\n    // If proj4 was bundled as an ES6 module, unwrap it to get\n    // to the actual main proj4 object.\n    // See discussion in https://github.com/kartena/Proj4Leaflet/pull/147\n    proj4 = proj4.default;\n  }\n  L.Proj = {};\n  L.Proj._isProj4Obj = function (a) {\n    return typeof a.inverse !== 'undefined' && typeof a.forward !== 'undefined';\n  };\n  L.Proj.Projection = L.Class.extend({\n    initialize: function (code, def, bounds) {\n      var isP4 = L.Proj._isProj4Obj(code);\n      this._proj = isP4 ? code : this._projFromCodeDef(code, def);\n      this.bounds = isP4 ? def : bounds;\n    },\n    project: function (latlng) {\n      var point = this._proj.forward([latlng.lng, latlng.lat]);\n      return new L.Point(point[0], point[1]);\n    },\n    unproject: function (point, unbounded) {\n      var point2 = this._proj.inverse([point.x, point.y]);\n      return new L.LatLng(point2[1], point2[0], unbounded);\n    },\n    _projFromCodeDef: function (code, def) {\n      if (def) {\n        proj4.defs(code, def);\n      } else if (proj4.defs[code] === undefined) {\n        var urn = code.split(':');\n        if (urn.length > 3) {\n          code = urn[urn.length - 3] + ':' + urn[urn.length - 1];\n        }\n        if (proj4.defs[code] === undefined) {\n          throw 'No projection definition for code ' + code;\n        }\n      }\n      return proj4(code);\n    }\n  });\n  L.Proj.CRS = L.Class.extend({\n    includes: L.CRS,\n    options: {\n      transformation: new L.Transformation(1, 0, -1, 0)\n    },\n    initialize: function (a, b, c) {\n      var code, proj, def, options;\n      if (L.Proj._isProj4Obj(a)) {\n        proj = a;\n        code = proj.srsCode;\n        options = b || {};\n        this.projection = new L.Proj.Projection(proj, options.bounds);\n      } else {\n        code = a;\n        def = b;\n        options = c || {};\n        this.projection = new L.Proj.Projection(code, def, options.bounds);\n      }\n      L.Util.setOptions(this, options);\n      this.code = code;\n      this.transformation = this.options.transformation;\n      if (this.options.origin) {\n        this.transformation = new L.Transformation(1, -this.options.origin[0], -1, this.options.origin[1]);\n      }\n      if (this.options.scales) {\n        this._scales = this.options.scales;\n      } else if (this.options.resolutions) {\n        this._scales = [];\n        for (var i = this.options.resolutions.length - 1; i >= 0; i--) {\n          if (this.options.resolutions[i]) {\n            this._scales[i] = 1 / this.options.resolutions[i];\n          }\n        }\n      }\n      this.infinite = !this.options.bounds;\n    },\n    scale: function (zoom) {\n      var iZoom = Math.floor(zoom),\n        baseScale,\n        nextScale,\n        scaleDiff,\n        zDiff;\n      if (zoom === iZoom) {\n        return this._scales[zoom];\n      } else {\n        // Non-integer zoom, interpolate\n        baseScale = this._scales[iZoom];\n        nextScale = this._scales[iZoom + 1];\n        scaleDiff = nextScale - baseScale;\n        zDiff = zoom - iZoom;\n        return baseScale + scaleDiff * zDiff;\n      }\n    },\n    zoom: function (scale) {\n      // Find closest number in this._scales, down\n      var downScale = this._closestElement(this._scales, scale),\n        downZoom = this._scales.indexOf(downScale),\n        nextScale,\n        nextZoom,\n        scaleDiff;\n      // Check if scale is downScale => return array index\n      if (scale === downScale) {\n        return downZoom;\n      }\n      if (downScale === undefined) {\n        return -Infinity;\n      }\n      // Interpolate\n      nextZoom = downZoom + 1;\n      nextScale = this._scales[nextZoom];\n      if (nextScale === undefined) {\n        return Infinity;\n      }\n      scaleDiff = nextScale - downScale;\n      return (scale - downScale) / scaleDiff + downZoom;\n    },\n    distance: L.CRS.Earth.distance,\n    R: L.CRS.Earth.R,\n    /* Get the closest lowest element in an array */\n    _closestElement: function (array, element) {\n      var low;\n      for (var i = array.length; i--;) {\n        if (array[i] <= element && (low === undefined || low < array[i])) {\n          low = array[i];\n        }\n      }\n      return low;\n    }\n  });\n  L.Proj.GeoJSON = L.GeoJSON.extend({\n    initialize: function (geojson, options) {\n      this._callLevel = 0;\n      L.GeoJSON.prototype.initialize.call(this, geojson, options);\n    },\n    addData: function (geojson) {\n      var crs;\n      if (geojson) {\n        if (geojson.crs && geojson.crs.type === 'name') {\n          crs = new L.Proj.CRS(geojson.crs.properties.name);\n        } else if (geojson.crs && geojson.crs.type) {\n          crs = new L.Proj.CRS(geojson.crs.type + ':' + geojson.crs.properties.code);\n        }\n        if (crs !== undefined) {\n          this.options.coordsToLatLng = function (coords) {\n            var point = L.point(coords[0], coords[1]);\n            return crs.projection.unproject(point);\n          };\n        }\n      }\n\n      // Base class' addData might call us recursively, but\n      // CRS shouldn't be cleared in that case, since CRS applies\n      // to the whole GeoJSON, inluding sub-features.\n      this._callLevel++;\n      try {\n        L.GeoJSON.prototype.addData.call(this, geojson);\n      } finally {\n        this._callLevel--;\n        if (this._callLevel === 0) {\n          delete this.options.coordsToLatLng;\n        }\n      }\n    }\n  });\n  L.Proj.geoJson = function (geojson, options) {\n    return new L.Proj.GeoJSON(geojson, options);\n  };\n  L.Proj.ImageOverlay = L.ImageOverlay.extend({\n    initialize: function (url, bounds, options) {\n      L.ImageOverlay.prototype.initialize.call(this, url, null, options);\n      this._projectedBounds = bounds;\n    },\n    // Danger ahead: Overriding internal methods in Leaflet.\n    // Decided to do this rather than making a copy of L.ImageOverlay\n    // and doing very tiny modifications to it.\n    // Future will tell if this was wise or not.\n    _animateZoom: function (event) {\n      var scale = this._map.getZoomScale(event.zoom);\n      var northWest = L.point(this._projectedBounds.min.x, this._projectedBounds.max.y);\n      var offset = this._projectedToNewLayerPoint(northWest, event.zoom, event.center);\n      L.DomUtil.setTransform(this._image, offset, scale);\n    },\n    _reset: function () {\n      var zoom = this._map.getZoom();\n      var pixelOrigin = this._map.getPixelOrigin();\n      var bounds = L.bounds(this._transform(this._projectedBounds.min, zoom)._subtract(pixelOrigin), this._transform(this._projectedBounds.max, zoom)._subtract(pixelOrigin));\n      var size = bounds.getSize();\n      L.DomUtil.setPosition(this._image, bounds.min);\n      this._image.style.width = size.x + 'px';\n      this._image.style.height = size.y + 'px';\n    },\n    _projectedToNewLayerPoint: function (point, zoom, center) {\n      var viewHalf = this._map.getSize()._divideBy(2);\n      var newTopLeft = this._map.project(center, zoom)._subtract(viewHalf)._round();\n      var topLeft = newTopLeft.add(this._map._getMapPanePos());\n      return this._transform(point, zoom)._subtract(topLeft);\n    },\n    _transform: function (point, zoom) {\n      var crs = this._map.options.crs;\n      var transformation = crs.transformation;\n      var scale = crs.scale(zoom);\n      return transformation.transform(point, scale);\n    }\n  });\n  L.Proj.imageOverlay = function (url, bounds, options) {\n    return new L.Proj.ImageOverlay(url, bounds, options);\n  };\n  return L.Proj;\n});","map":{"version":3,"names":["factory","L","proj4","define","amd","module","exports","require","window","__esModule","default","Proj","_isProj4Obj","a","inverse","forward","Projection","Class","extend","initialize","code","def","bounds","isP4","_proj","_projFromCodeDef","project","latlng","point","lng","lat","Point","unproject","unbounded","point2","x","y","LatLng","defs","undefined","urn","split","length","CRS","includes","options","transformation","Transformation","b","c","proj","srsCode","projection","Util","setOptions","origin","scales","_scales","resolutions","i","infinite","scale","zoom","iZoom","Math","floor","baseScale","nextScale","scaleDiff","zDiff","downScale","_closestElement","downZoom","indexOf","nextZoom","Infinity","distance","Earth","R","array","element","low","GeoJSON","geojson","_callLevel","prototype","call","addData","crs","type","properties","name","coordsToLatLng","coords","geoJson","ImageOverlay","url","_projectedBounds","_animateZoom","event","_map","getZoomScale","northWest","min","max","offset","_projectedToNewLayerPoint","center","DomUtil","setTransform","_image","_reset","getZoom","pixelOrigin","getPixelOrigin","_transform","_subtract","size","getSize","setPosition","style","width","height","viewHalf","_divideBy","newTopLeft","_round","topLeft","add","_getMapPanePos","transform","imageOverlay"],"sources":["C:/Users/veli-pelli/Documents/KalastusApp/frontend/node_modules/proj4leaflet/src/proj4leaflet.js"],"sourcesContent":["(function (factory) {\r\n\tvar L, proj4;\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD\r\n\t\tdefine(['leaflet', 'proj4'], factory);\r\n\t} else if (typeof module === 'object' && typeof module.exports === \"object\") {\r\n\t\t// Node/CommonJS\r\n\t\tL = require('leaflet');\r\n\t\tproj4 = require('proj4');\r\n\t\tmodule.exports = factory(L, proj4);\r\n\t} else {\r\n\t\t// Browser globals\r\n\t\tif (typeof window.L === 'undefined' || typeof window.proj4 === 'undefined')\r\n\t\t\tthrow 'Leaflet and proj4 must be loaded first';\r\n\t\tfactory(window.L, window.proj4);\r\n\t}\r\n}(function (L, proj4) {\r\n\tif (proj4.__esModule && proj4.default) {\r\n\t\t// If proj4 was bundled as an ES6 module, unwrap it to get\r\n\t\t// to the actual main proj4 object.\r\n\t\t// See discussion in https://github.com/kartena/Proj4Leaflet/pull/147\r\n\t\tproj4 = proj4.default;\r\n\t}\r\n \r\n\tL.Proj = {};\r\n\r\n\tL.Proj._isProj4Obj = function(a) {\r\n\t\treturn (typeof a.inverse !== 'undefined' &&\r\n\t\t\ttypeof a.forward !== 'undefined');\r\n\t};\r\n\r\n\tL.Proj.Projection = L.Class.extend({\r\n\t\tinitialize: function(code, def, bounds) {\r\n\t\t\tvar isP4 = L.Proj._isProj4Obj(code);\r\n\t\t\tthis._proj = isP4 ? code : this._projFromCodeDef(code, def);\r\n\t\t\tthis.bounds = isP4 ? def : bounds;\r\n\t\t},\r\n\r\n\t\tproject: function (latlng) {\r\n\t\t\tvar point = this._proj.forward([latlng.lng, latlng.lat]);\r\n\t\t\treturn new L.Point(point[0], point[1]);\r\n\t\t},\r\n\r\n\t\tunproject: function (point, unbounded) {\r\n\t\t\tvar point2 = this._proj.inverse([point.x, point.y]);\r\n\t\t\treturn new L.LatLng(point2[1], point2[0], unbounded);\r\n\t\t},\r\n\r\n\t\t_projFromCodeDef: function(code, def) {\r\n\t\t\tif (def) {\r\n\t\t\t\tproj4.defs(code, def);\r\n\t\t\t} else if (proj4.defs[code] === undefined) {\r\n\t\t\t\tvar urn = code.split(':');\r\n\t\t\t\tif (urn.length > 3) {\r\n\t\t\t\t\tcode = urn[urn.length - 3] + ':' + urn[urn.length - 1];\r\n\t\t\t\t}\r\n\t\t\t\tif (proj4.defs[code] === undefined) {\r\n\t\t\t\t\tthrow 'No projection definition for code ' + code;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn proj4(code);\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.CRS = L.Class.extend({\r\n\t\tincludes: L.CRS,\r\n\r\n\t\toptions: {\r\n\t\t\ttransformation: new L.Transformation(1, 0, -1, 0)\r\n\t\t},\r\n\r\n\t\tinitialize: function(a, b, c) {\r\n\t\t\tvar code,\r\n\t\t\t    proj,\r\n\t\t\t    def,\r\n\t\t\t    options;\r\n\r\n\t\t\tif (L.Proj._isProj4Obj(a)) {\r\n\t\t\t\tproj = a;\r\n\t\t\t\tcode = proj.srsCode;\r\n\t\t\t\toptions = b || {};\r\n\r\n\t\t\t\tthis.projection = new L.Proj.Projection(proj, options.bounds);\r\n\t\t\t} else {\r\n\t\t\t\tcode = a;\r\n\t\t\t\tdef = b;\r\n\t\t\t\toptions = c || {};\r\n\t\t\t\tthis.projection = new L.Proj.Projection(code, def, options.bounds);\r\n\t\t\t}\r\n\r\n\t\t\tL.Util.setOptions(this, options);\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.transformation = this.options.transformation;\r\n\r\n\t\t\tif (this.options.origin) {\r\n\t\t\t\tthis.transformation =\r\n\t\t\t\t\tnew L.Transformation(1, -this.options.origin[0],\r\n\t\t\t\t\t\t-1, this.options.origin[1]);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.scales) {\r\n\t\t\t\tthis._scales = this.options.scales;\r\n\t\t\t} else if (this.options.resolutions) {\r\n\t\t\t\tthis._scales = [];\r\n\t\t\t\tfor (var i = this.options.resolutions.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif (this.options.resolutions[i]) {\r\n\t\t\t\t\t\tthis._scales[i] = 1 / this.options.resolutions[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.infinite = !this.options.bounds;\r\n\r\n\t\t},\r\n\r\n\t\tscale: function(zoom) {\r\n\t\t\tvar iZoom = Math.floor(zoom),\r\n\t\t\t\tbaseScale,\r\n\t\t\t\tnextScale,\r\n\t\t\t\tscaleDiff,\r\n\t\t\t\tzDiff;\r\n\t\t\tif (zoom === iZoom) {\r\n\t\t\t\treturn this._scales[zoom];\r\n\t\t\t} else {\r\n\t\t\t\t// Non-integer zoom, interpolate\r\n\t\t\t\tbaseScale = this._scales[iZoom];\r\n\t\t\t\tnextScale = this._scales[iZoom + 1];\r\n\t\t\t\tscaleDiff = nextScale - baseScale;\r\n\t\t\t\tzDiff = (zoom - iZoom);\r\n\t\t\t\treturn baseScale + scaleDiff * zDiff;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tzoom: function(scale) {\r\n\t\t\t// Find closest number in this._scales, down\r\n\t\t\tvar downScale = this._closestElement(this._scales, scale),\r\n\t\t\t\tdownZoom = this._scales.indexOf(downScale),\r\n\t\t\t\tnextScale,\r\n\t\t\t\tnextZoom,\r\n\t\t\t\tscaleDiff;\r\n\t\t\t// Check if scale is downScale => return array index\r\n\t\t\tif (scale === downScale) {\r\n\t\t\t\treturn downZoom;\r\n\t\t\t}\r\n\t\t\tif (downScale === undefined) {\r\n\t\t\t\treturn -Infinity;\r\n\t\t\t}\r\n\t\t\t// Interpolate\r\n\t\t\tnextZoom = downZoom + 1;\r\n\t\t\tnextScale = this._scales[nextZoom];\r\n\t\t\tif (nextScale === undefined) {\r\n\t\t\t\treturn Infinity;\r\n\t\t\t}\r\n\t\t\tscaleDiff = nextScale - downScale;\r\n\t\t\treturn (scale - downScale) / scaleDiff + downZoom;\r\n\t\t},\r\n\r\n\t\tdistance: L.CRS.Earth.distance,\r\n\r\n\t\tR: L.CRS.Earth.R,\r\n\r\n\t\t/* Get the closest lowest element in an array */\r\n\t\t_closestElement: function(array, element) {\r\n\t\t\tvar low;\r\n\t\t\tfor (var i = array.length; i--;) {\r\n\t\t\t\tif (array[i] <= element && (low === undefined || low < array[i])) {\r\n\t\t\t\t\tlow = array[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn low;\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.GeoJSON = L.GeoJSON.extend({\r\n\t\tinitialize: function(geojson, options) {\r\n\t\t\tthis._callLevel = 0;\r\n\t\t\tL.GeoJSON.prototype.initialize.call(this, geojson, options);\r\n\t\t},\r\n\r\n\t\taddData: function(geojson) {\r\n\t\t\tvar crs;\r\n\r\n\t\t\tif (geojson) {\r\n\t\t\t\tif (geojson.crs && geojson.crs.type === 'name') {\r\n\t\t\t\t\tcrs = new L.Proj.CRS(geojson.crs.properties.name);\r\n\t\t\t\t} else if (geojson.crs && geojson.crs.type) {\r\n\t\t\t\t\tcrs = new L.Proj.CRS(geojson.crs.type + ':' + geojson.crs.properties.code);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (crs !== undefined) {\r\n\t\t\t\t\tthis.options.coordsToLatLng = function(coords) {\r\n\t\t\t\t\t\tvar point = L.point(coords[0], coords[1]);\r\n\t\t\t\t\t\treturn crs.projection.unproject(point);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Base class' addData might call us recursively, but\r\n\t\t\t// CRS shouldn't be cleared in that case, since CRS applies\r\n\t\t\t// to the whole GeoJSON, inluding sub-features.\r\n\t\t\tthis._callLevel++;\r\n\t\t\ttry {\r\n\t\t\t\tL.GeoJSON.prototype.addData.call(this, geojson);\r\n\t\t\t} finally {\r\n\t\t\t\tthis._callLevel--;\r\n\t\t\t\tif (this._callLevel === 0) {\r\n\t\t\t\t\tdelete this.options.coordsToLatLng;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.geoJson = function(geojson, options) {\r\n\t\treturn new L.Proj.GeoJSON(geojson, options);\r\n\t};\r\n\r\n\tL.Proj.ImageOverlay = L.ImageOverlay.extend({\r\n\t\tinitialize: function (url, bounds, options) {\r\n\t\t\tL.ImageOverlay.prototype.initialize.call(this, url, null, options);\r\n\t\t\tthis._projectedBounds = bounds;\r\n\t\t},\r\n\r\n\t\t// Danger ahead: Overriding internal methods in Leaflet.\r\n\t\t// Decided to do this rather than making a copy of L.ImageOverlay\r\n\t\t// and doing very tiny modifications to it.\r\n\t\t// Future will tell if this was wise or not.\r\n\t\t_animateZoom: function (event) {\r\n\t\t\tvar scale = this._map.getZoomScale(event.zoom);\r\n\t\t\tvar northWest = L.point(this._projectedBounds.min.x, this._projectedBounds.max.y);\r\n\t\t\tvar offset = this._projectedToNewLayerPoint(northWest, event.zoom, event.center);\r\n\r\n\t\t\tL.DomUtil.setTransform(this._image, offset, scale);\r\n\t\t},\r\n\r\n\t\t_reset: function () {\r\n\t\t\tvar zoom = this._map.getZoom();\r\n\t\t\tvar pixelOrigin = this._map.getPixelOrigin();\r\n\t\t\tvar bounds = L.bounds(\r\n\t\t\t\tthis._transform(this._projectedBounds.min, zoom)._subtract(pixelOrigin),\r\n\t\t\t\tthis._transform(this._projectedBounds.max, zoom)._subtract(pixelOrigin)\r\n\t\t\t);\r\n\t\t\tvar size = bounds.getSize();\r\n\r\n\t\t\tL.DomUtil.setPosition(this._image, bounds.min);\r\n\t\t\tthis._image.style.width = size.x + 'px';\r\n\t\t\tthis._image.style.height = size.y + 'px';\r\n\t\t},\r\n\r\n\t\t_projectedToNewLayerPoint: function (point, zoom, center) {\r\n\t\t\tvar viewHalf = this._map.getSize()._divideBy(2);\r\n\t\t\tvar newTopLeft = this._map.project(center, zoom)._subtract(viewHalf)._round();\r\n\t\t\tvar topLeft = newTopLeft.add(this._map._getMapPanePos());\r\n\r\n\t\t\treturn this._transform(point, zoom)._subtract(topLeft);\r\n\t\t},\r\n\r\n\t\t_transform: function (point, zoom) {\r\n\t\t\tvar crs = this._map.options.crs;\r\n\t\t\tvar transformation = crs.transformation;\r\n\t\t\tvar scale = crs.scale(zoom);\r\n\r\n\t\t\treturn transformation.transform(point, scale);\r\n\t\t}\r\n\t});\r\n\r\n\tL.Proj.imageOverlay = function (url, bounds, options) {\r\n\t\treturn new L.Proj.ImageOverlay(url, bounds, options);\r\n\t};\r\n\r\n\treturn L.Proj;\r\n}));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}